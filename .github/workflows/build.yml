name: Build & SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      SONAR_ORG: PeTkun_Industries
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v4

      # Laba1
      - name: Configure Laba1
        run: cmake -S Laba1 -B Laba1/build

      - name: Build Laba1 with wrapper
        run: build-wrapper-linux-x86-64 --out-dir Laba1/build_wrapper make -C Laba1/build

      - name: SonarCloud scan Laba1
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=PeTkun_Industries_Laba1
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.sources=Laba1
            -Dsonar.cfamily.compile-commands=Laba1/build_wrapper/compile_commands.json
            -Dsonar.coverage.exclusions=**
            -Dsonar.cfamily.skipCoverage=true

      # Laba2
      - name: Configure Laba2
        run: cmake -S Laba2 -B Laba2/build

      - name: Build Laba2 with wrapper
        run: build-wrapper-linux-x86-64 --out-dir Laba2/build_wrapper make -C Laba2/build

      - name: SonarCloud scan Laba2
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=PeTkun_Industries_Laba2
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.sources=Laba2
            -Dsonar.cfamily.compile-commands=Laba2/build_wrapper/compile_commands.json
            -Dsonar.coverage.exclusions=**
            -Dsonar.cfamily.skipCoverage=true
